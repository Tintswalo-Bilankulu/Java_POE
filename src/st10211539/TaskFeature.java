/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package st10211539;
import javax.swing.JOptionPane;
/**
 *
 * @author lab_services_student
 */
public class TaskFeature {
 Login loginObject = new Login();
    
    
    
    
    private static String TaskName ;
    private static int chosenOption;
    private static int numberOfTasks;
    private static int taskDuration; 
    
    private static int numberOfCurrentTask; 
    private static String taskDescription;
    private static String DeveloperDetails;
    private static String TaskStatus;
    
    static int totalHours = 0;
    static String taskDetails;
    
    
 /*The name of the task to be performed: “Add Login Feature”*/
    public void setTaskName(){
        TaskName = JOptionPane.showInputDialog("AddLogin Feature");
    }
    
    public String getTaskName(){
        return TaskName;
    }
    
    public int getChosenOPtion(){
        return chosenOption;
    }
    
   /**/
    public void setNumberOfTasks(){
        numberOfTasks = Integer.parseInt(JOptionPane.showInputDialog("Enter the number of tasks you want to add"));
    }
    
    public static int getNumberOfTasks(){
        return numberOfTasks;
    }
    
    /*The estimated duration of the task in hours. This number will be used for calculations and should make use of an appropriate data type*/
    public void setTaskDuration(){
        taskDuration = Integer.parseInt(JOptionPane.showInputDialog("Enter the duration of this task"));
    }
    
    public int getTaskDuration(){
        return taskDuration;
    }
    
   /*A short description of the task, this description should not exceed 50 characters in length. The following error message should be displayed if the task description is too long:“Please enter a task description of less than 50 characters”OR“Task successfully captured” if the message description meets the requirements. */
    public void setTaskDescription(){
        taskDescription = JOptionPane.showInputDialog("Please enter a task description");
    }
    
    public String getTaskDescription(){
        return taskDescription;
    }
    
 
    public void DescriptionStatus(){
        while(!Info.checkTaskDescription()){
            JOptionPane.showMessageDialog(null,"Please enter a task description of not more than 50 characters");
            setTaskDescription();
        }
       
        JOptionPane.showMessageDialog(null, "Task Successfully captured.");
    }
    
   
    public void setDeveloperNames(){
        DeveloperDetails = JOptionPane.showInputDialog("what is the developer's first and last name");
    }
    
    public String getDeveloperNames(){
        return DeveloperDetails;
    }
    
   
    public void setTaskStatus(){
        int option = Integer.parseInt(JOptionPane.showInputDialog("""
                                                                  Please choose the Status of this task from the three options.
                                                                  1.To Do
                                                                  2.Doing
                                                                  3.Done"""));
        switch(option){
            case 1 -> /**/
                TaskStatus = "To Do";
            case 2 -> /**/
                TaskStatus = "Doing";
            case 3 -> /**/
                TaskStatus = "Done";
        }
    }
    
    public String getTaskStatus(){
        return TaskStatus;
    }
    
    
   
    public void setNumberOfCurrentTask(int TaskNumber){
        numberOfCurrentTask = TaskNumber;
    }
            
    public int getNumberOfCurrentTask(){
        return numberOfCurrentTask;
    }
    

     
    public void addTasks(){
         setNumberOfTasks();
        
        String[] developer = new String[getNumberOfTasks()];
        String[] taskNames = new String[getNumberOfTasks()];
        String[] taskID = new String[getNumberOfTasks()];
        String[] taskStatuses =new String[getNumberOfTasks()];
        int[] taskDurations = new int[getNumberOfTasks()];

         
                 /*Tasks start with the number 0, this number is incremented and autogenerated as more tasks are added . */
                    for(int i = 0; i < getNumberOfTasks() ; i++){ 
                        
                        
                        setDeveloperNames();
                        setTaskName();
                        
                        setTaskStatus();
                        setTaskDuration();
                        setNumberOfCurrentTask(i);                                                
                        setTaskDescription();
                        DescriptionStatus();                       
                        
                        developer[i] = getDeveloperNames();
                        taskNames[i] = getTaskName();
                        taskID[i] = Info.createTaskID();
                        taskStatuses[i] = getTaskStatus();
                        taskDurations[i] = getTaskDuration();                        
                        
                  
                        Info.checkTaskDescription();
                        
                       
                        JOptionPane.showMessageDialog(null, Info.printTaskDetails());
                        
                      
                        totalHours = totalHours + getTaskDuration();
                        
                      
                        
                    }
             
          JOptionPane.showMessageDialog(null,"You need " +Info.returnTotalHours()+" hours to complete these tasks.");
          
          
                   
    }
    
    
    public void welcomeToEasyKanbanOption(){
    /*The users should only be able to add tasks to the application if they have logged in 
successfully.*/
        
        if(loginObject.loginUser()){
            JOptionPane.showMessageDialog(null, "Welcome to EasyKanban\n");
            
            
            do{
                chosenOption = Integer.parseInt(JOptionPane.showInputDialog("""
                                                                            PLEASE SELECT AN OPTION
                                                                            Option 1) Add tasks
                                                                            Option 2) Show Report
                                                                            Option 3) Quit"""));

                switch(chosenOption){
                    
                case 1 -> /**/
                    addTasks();
                case 2 -> /**/ 
                    JOptionPane.showMessageDialog(null, "Coming soon");
                case 3 -> /**/
                    chosenOption = 3;
                
                }
            }
            while(chosenOption != 3);
            
        }
    
    }     

    TaskFeature() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
